/// <reference types="tree-sitter-cli/dsl" />
declare const xpathGrammar: GrammarSchema<"query" | "_expr" | "_primary_expr" | "_literal" | "string_literal" | "_numeric_literal" | "var_ref" | "context_item_expr" | "id_function_call" | "function_call" | "parenthesized_expr" | "_postfix_expr" | "predicate" | "arg_list" | "_argument" | "path_expr" | "_relative_path_expr" | "step_expr" | "_axis_step" | "_step" | "abbrev_foward" | "abbrev_reverse" | "forward_axis" | "reverse_axis" | "_node_test" | "_be_kind" | "_kind_list" | "infix_expression" | "unary_expr" | "_infix_operator" | "_comparison_word" | "_whitespace_extra" | "_whitespace" | "single_type" | "char_ref" | "escape_curly" | "predefined_entity_ref" | "escape_apos" | "escape_quote" | "char_group" | "interpolation" | "postfix_lookup" | "unary_lookup" | "_key_specifier" | "lookup_digit" | "if_expr" | "_kind_test" | "any_kind_test" | "text_test" | "comment_test" | "namespace_node_test" | "document_test" | "element_test" | "element_test_params" | "attribute_test" | "_attrib_name_or_wildcard" | "schema_element_test" | "schema_attribute_test" | "pi_test" | "name_test" | "wildcard" | "integer_literal" | "decimal_literal" | "_EQName" | "_QName" | "ns_builtin" | "kw" | "NCName" | "reserved" | "identifier">;
export = xpathGrammar;
