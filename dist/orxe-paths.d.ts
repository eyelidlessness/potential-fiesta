declare const _default: {
    '/xpath/expression': string[];
    'concat("Evaluates to: ", /xpath/expression)': string[];
    './author': string[];
    author: string[];
    'first.name': string[];
    '/bookstore': string[];
    '//author': string[];
    'author/first-name': string[];
    'bookstore//title': string[];
    'bookstore/*/title': string[];
    'bookstore//book/excerpt//emph': string[];
    './/title': string[];
    'book/*/last-name': string[];
    '@style': string[];
    'price/@exchange': string[];
    'price/@exchange/total': string[];
    'book/@style': string[];
    './first-name': string[];
    'first-name': string[];
    'my:book': string[];
    '../../some-path': string[];
    '*/*': string[];
    '@*': string[];
    '@my:*': string[];
    'my:*': string[];
    '/simple/xpath/to/node = 1': string[];
    '/simple/xpath/to/node != 1': string[];
    '/simple/xpath/to/node < 1': string[];
    '/simple/xpath/to/node > 1': string[];
    '/simple/xpath/to/node <= 1': string[];
    '/simple/xpath/to/node >= 1': string[];
    '/simple/xpath/to/node = "1"': string[];
    '/simple/xpath/to/node != "1"': string[];
    'if(selected(/model/instance[1]/pregnancy/group_lmp/lmp_method, \'date\'), /model/instance[1]/pregnancy/group_lmp/lmp_date, \'testing\')': string[];
    'if(selected(/model/instance[1]/pregnancy/group_lmp/lmp_method, \'date\'), /model/instance[1]/pregnancy/group_lmp/lmp_date, concat(\'testing\', \'1\', \'2\', \'3\', \'...\'))': string[];
    'if(selected(/model/instance[1]/pregnancy/group_lmp/lmp_method, \'date\'), /model/instance[1]/pregnancy/group_lmp/lmp_date, date-time(0))': string[];
    'if(selected(/model/instance[1]/pregnancy/group_lmp/lmp_method, \'date\'), /model/instance[1]/pregnancy/group_lmp/lmp_date, date-time(decimal-date-time(today() - 60)))': string[];
    'if(selected(/model/instance[1]/pregnancy/group_lmp/lmp_method ,\'date\'), /model/instance[1]/pregnancy/group_lmp/lmp_date ,date-time(decimal-date-time(today()- 60 )))': string[];
    'if(/something, \'A\', \'B\' )': string[];
    'if(/something  != \'\', \'A\', \'B\' )': string[];
    'if (/something, \'A\', \'B\' )': string[];
    'if (/something  != \'\', \'A\', \'B\' )': string[];
    'not(selected(../dob_method,\'approx\'))': string[];
    'not(not(selected(../dob_method,\'approx\')))': string[];
    'selected(../dob_method,\'approx\')': string[];
    '.': string[];
    '.>1': string[];
    '.> 1': string[];
    '. >1': string[];
    '. > 1': string[];
    '.>=1': string[];
    '.>= 1': string[];
    '. >=1': string[];
    '. >= 1': string[];
    '.<1': string[];
    '.< 1': string[];
    '. <1': string[];
    '. < 1': string[];
    '.<=1': string[];
    '.<= 1': string[];
    '. <=1': string[];
    '. <= 1': string[];
    '../some-path=\'some-value\'': string[];
    '../some-path="some-value"': string[];
    '../some-path= \'some-value\'': string[];
    '../some-path =\'some-value\'': string[];
    '../some-path = \'some-value\'': string[];
    '\'some-value\'=../some-path': string[];
    '"some-value"=../some-path': string[];
    '\'some-value\'= ../some-path': string[];
    '\'some-value\' =../some-path': string[];
    '\'some-value\' = ../some-path': string[];
    '/simple/xpath/to/node < today() + 1': string[];
    '/simple/xpath/to/node > today() + 1': string[];
    '/simple/xpath/to/node > today() - 1': string[];
    '/simple/xpath/to/node < today() - 1': string[];
    '/simple/xpath/to/node < (today() + 1)': string[];
    '/simple/xpath/to/node > (today() + 1)': string[];
    '/simple/xpath/to/node > (today() - 1)': string[];
    '/simple/xpath/to/node < (today() - 1)': string[];
    '/data/a!= /data/b': string[];
    '/data/a!=/data/b': string[];
    '/data/a!= "1"': string[];
    '/data/a!="1"': string[];
    '"1" != /data/a': string[];
    '"1"!= /data/a': string[];
    '"1"!=/data/a': string[];
    '/data/a<= /data/b': string[];
    '/data/a<=/data/b': string[];
    '/data/a<= "1"': string[];
    '/data/a<="1"': string[];
    '"1" <= /data/a': string[];
    '"1"<= /data/a': string[];
    '"1"<=/data/a': string[];
    '/data/a>= /data/b': string[];
    '/data/a>=/data/b': string[];
    '/data/a>= "1"': string[];
    '/data/a>="1"': string[];
    '"1" >= /data/a': string[];
    '"1">= /data/a': string[];
    '"1">=/data/a': string[];
    '/data/number + 1': string[];
    '/data/number+1': string[];
    '../number + 1': string[];
    '../number+1': string[];
    'boolean(/xhtml:html)': string[];
    'boolean(/asdf)': string[];
    'boolean(//xhtml:article)': string[];
    '-10 = *': string[];
    '-10 != *': string[];
    '4 = *': string[];
    '4 != *': string[];
    '4.3 = *': string[];
    '4.3 != *': string[];
    'true() = *': string[];
    'true() != *': string[];
    'false() = *': string[];
    'false() != *': string[];
    '0 = *': string[];
    '0 != *': string[];
    '\'aaa\' = *': string[];
    '\'aaa\' != *': string[];
    '\'bb\' = *': string[];
    '\'bb\' != *': string[];
    '\'\' = *': string[];
    '\'\' != *': string[];
    '-10 < *': string[];
    '-10 <= *': string[];
    '-10 > *': string[];
    '-10 >= *': string[];
    '10 < *': string[];
    '10 <= *': string[];
    '10 > *': string[];
    '10 >= *': string[];
    '5 < *': string[];
    '5 <= *': string[];
    '5 > *': string[];
    '5 >= *': string[];
    '2 < *': string[];
    '2 <= *': string[];
    '2 > *': string[];
    '2 >= *': string[];
    'true() < *': string[];
    'true() <= *': string[];
    'true() > *': string[];
    'true() >= *': string[];
    'false() < *': string[];
    'false() <= *': string[];
    'false() > *': string[];
    'false() >= *': string[];
    '\'4\' < *': string[];
    '\'4\' <= *': string[];
    '\'4\' > *': string[];
    '\'4\' >= *': string[];
    '* < -10': string[];
    '* <= -10': string[];
    '* > -10': string[];
    '* >= -10': string[];
    '* < 10': string[];
    '* <= 10': string[];
    '* > 10': string[];
    '* >= 10': string[];
    '* < 5': string[];
    '* <= 5': string[];
    '* > 5': string[];
    '* >= 5': string[];
    '* < 2': string[];
    '* <= 2': string[];
    '* > 2': string[];
    '* >= 2': string[];
    '* < true()': string[];
    '* <= true()': string[];
    '* > true()': string[];
    '* >= true()': string[];
    '* < false()': string[];
    '* <= false()': string[];
    '* > false()': string[];
    '* >= false()': string[];
    '* < \'4\'': string[];
    '* <= \'4\'': string[];
    '* > \'4\'': string[];
    '* >= \'4\'': string[];
    '* < \'aaa\'': string[];
    '* <= \'aaa\'': string[];
    '* > \'aaa\'': string[];
    '* >= \'aaa\'': string[];
    '\'aaa\' < *': string[];
    '\'aaa\' <= *': string[];
    '\'aaa\' > *': string[];
    '\'aaa\' >= *': string[];
    '0 < *': string[];
    '0 <= *': string[];
    '0 > *': string[];
    '0 >= *': string[];
    '\'\' < *': string[];
    '\'\' <= *': string[];
    '\'\' > *': string[];
    '\'\' >= *': string[];
    '* < 0': string[];
    '* <= 0': string[];
    '* > 0': string[];
    '* >= 0': string[];
    '* < \'\'': string[];
    '* <= \'\'': string[];
    '* > \'\'': string[];
    '* >= \'\'': string[];
    '* = -10': string[];
    '* = 4': string[];
    '* = 4.3': string[];
    '* = 0': string[];
    '* = true()': string[];
    '* = false()': string[];
    '* = \'aaa\'': string[];
    '* = \'bb\'': string[];
    '* = \'\'': string[];
    '* != -10': string[];
    '* != 4': string[];
    '* != 4.3': string[];
    '* != 0': string[];
    '* != true()': string[];
    '* != false()': string[];
    '* != \'aaa\'': string[];
    '* != \'bb\'': string[];
    '* != \'\'': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* < id(\'ComparisonOperatorCaseNodesetEmpty\')/*': string[];
    'id (\'ComparisonOperatorCaseNodesetNegative5to5\')/* < id( \'ComparisonOperatorCaseNodesetEmpty\')/*': string[];
    'id ( \'ComparisonOperatorCaseNodesetNegative5to5\' )/* < id( \'ComparisonOperatorCaseNodesetEmpty\' )/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* <= id(\'ComparisonOperatorCaseNodesetEmpty\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* > id(\'ComparisonOperatorCaseNodesetEmpty\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* >= id(\'ComparisonOperatorCaseNodesetEmpty\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* < id(\'ComparisonOperatorCaseNodeset4to8\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* <= id(\'ComparisonOperatorCaseNodeset4to8\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* > id(\'ComparisonOperatorCaseNodeset4to8\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* >= id(\'ComparisonOperatorCaseNodeset4to8\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* < id(\'ComparisonOperatorCaseNodeset6to10\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* <= id(\'ComparisonOperatorCaseNodeset6to10\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* > id(\'ComparisonOperatorCaseNodeset6to10\')/*': string[];
    'id(\'ComparisonOperatorCaseNodesetNegative5to5\')/* >= id(\'ComparisonOperatorCaseNodeset6to10\')/*': string[];
    '/thedata/nodeA': string[];
    '/thedata/nodeB': string[];
    '/thedata/nodeC': string[];
    '/model/instance[1]/*//*[@template] | /model/instance[1]/*//*[@jr:template]': string[];
    'attribute::*': string[];
    'child::*': string[];
    'ancestor-or-self::*': string[];
    'attribute::attrib3': string[];
    'child::html': string[];
    'child::xhtml:html': string[];
    'ancestor::xhtml:div': string[];
    'ancestor::div': string[];
    'id(.)': string[];
    'id(child::*)': string[];
    'local-name(/htmlnot)': string[];
    'namespace-uri(/htmlnot)': string[];
    'name(/htmlnot)': string[];
    'last()': never[];
    'last()-last()+1': never[];
    'position()=last()': never[];
    'position()=2': never[];
    'position()=-1': never[];
    'count(xhtml:p)': string[];
    '1 + count(xhtml:p)': string[];
    'count(p)': string[];
    '1 + count(p)': string[];
    'count(//nonexisting)': string[];
    '1 + count(//nonexisting)': string[];
    'number(*)': string[];
    'sum(self::*)': string[];
    'sum(*)': string[];
    '/': string[];
    '/html': string[];
    '/xhtml:html': string[];
    '/htmlnot': string[];
    '/xhtml:html/xhtml:body': string[];
    html: string[];
    'xhtml:html': string[];
    'xhtml:html/xhtml:body': string[];
    'child::*/attribute::*': string[];
    'ancestor-or-self::* /ancestor-or-self::*': string[];
    '/ancestor-or-self::* ancestor-or-self::*': string[];
    'string(namespace-uri(/*))': string[];
    'translate( ., "abc", "ABC")': string[];
    'string(/htmlnot)': string[];
    'id(\'nss25\')/namespace::*': string[];
    'id(\'nss25\')/namespace::* | id(\'nss25\')/attribute::*': string[];
    'id(\'nss40\')/namespace::*': string[];
    'id(\'nss40\')/namespace::* | id(\'nss40\')/namespace::*': string[];
    'id(\'nss40\')/namespace::* | id(\'nss25\')/attribute::* | id(\'nss25\')': string[];
    '/div/div/div/div/div|id(\'eee20\')': string[];
    'id(\'eee40\')/attribute::*': string[];
    '/div': string[];
    '1or1': never[];
    'area(./*)': string[];
    'distance(./*)': string[];
    'area(.)': string[];
    'distance(.)': string[];
    'checklist(2, 2, * )': string[];
    'coalesce(/simple/xpath/to/node, "whatever")': string[];
    'coalesce("", /simple/xpath/to/node)': string[];
    'coalesce(/simple/empty, /simple/xpath/to/node)': string[];
    'coalesce(/simple/xpath/to/node, "SECOND")': string[];
    'coalesce(self::*, \'ab\')': string[];
    'coalesce(self::*, \'cd\')': string[];
    'concat(/simple/xpath/to/node, /simple/xpath/to/node)': string[];
    'concat(/simple/xpath/to/node, "manteau")': string[];
    'concat(*, \'a\')': string[];
    'concat(*)': string[];
    '@id="FunctionCountNonEmpty"': string[];
    '@id="NoExist"': string[];
    '. < date(\'2012-07-24\')': string[];
    '. < date-time(\'2012-07-24\')': string[];
    '@id=\'FunctionDateCase2\'': string[];
    '@id=\'FunctionDateCase3\'': string[];
    '. = date(\'2012-07-24\') - 1': string[];
    '. = date-time(\'2012-07-24\') - 1': string[];
    '. > date(\'2012-07-24\') - 2': string[];
    '. > date-time(\'2012-07-24\') - 2': string[];
    '. < date(\'2012-07-25\') - 1': string[];
    '. < date-time(\'2012-07-25\') - 1': string[];
    '@id=\'FunctionDate\'': string[];
    '@id=\'FunctionDateCase4\'': string[];
    'decimal-time( /data/a )': string[];
    'ends-with( /data/a, "cab")': string[];
    'format-date(.,  "%Y/%n | %y/%m | %b" )': string[];
    'format-date-time(.,  "%Y/%n | %y/%m | %b" )': string[];
    'format-date(., "%Y/%n | %y/%m | %b" )': string[];
    'format-date-time(., "%Y/%n | %y/%m | %b" )': string[];
    'format-date(., "%M | %S | %3")': string[];
    'format-date-time(., "%M | %S | %3")': string[];
    'if(/unreal, "exists", "does not exist")': string[];
    'if(. != "0" and /div/div[@id="FunctionCheckListCaseEmpty"] != "", "yes", "no")': string[];
    '@id="FunctionCheckListCaseEmpty"': string[];
    '@id="FunctionChecklistCaseNo"': string[];
    'if(. = "0" or /div/div[@id="FunctionCheckListCaseEmpty"] != "", "yes", "no")': string[];
    'if( /model/instance[1]/data/page-welcome/GRP_ELIG/AGE_IC ="1" and /model/instance[1]/data/page-welcome/GRP_ELIG/INC_TEMP ="1" and /model/instance[1]/data/page-welcome/GRP_ELIG/NO_SEV_ILLNESS ="1" and /model/instance[1]/data/page-welcome/GRP_ELIG/FU_POSSIBLE ="1" and /model/instance[1]/data/page-welcome/GRP_ELIG/SAMPLE_COL_POSSIBLE ="1" and /model/instance[1]/data/page-welcome/GRP_ELIG/PROVIDE_INFORM_CONSENT ="1" and /model/instance[1]/data/page-welcome/GRP_ELIG/FEVER_RESP ="1", "Eligible", if( /model/instance[1]/data/page-welcome/GRP_ELIG/AGE_IC ="0" or /model/instance[1]/data/page-welcome/GRP_ELIG/INC_TEMP ="0" or /model/instance[1]/data/page-welcome/GRP_ELIG/NO_SEV_ILLNESS ="0" or /model/instance[1]/data/page-welcome/GRP_ELIG/FU_POSSIBLE ="0" or /model/instance[1]/data/page-welcome/GRP_ELIG/SAMPLE_COL_POSSIBLE ="0" or /model/instance[1]/data/page-welcome/GRP_ELIG/PROVIDE_INFORM_CONSENT ="0" or /model/instance[1]/data/page-welcome/GRP_ELIG/FEVER_RESP ="0", "Not-Eligible", "nothing"))': string[];
    'if( /data/a ="1" and /data/b ="1", "Eligible", if( /data/a ="0" or /data/b ="0", "Not-Eligible", "nothing"))': string[];
    'if( /data/a ="1" and /data/c ="1", "Eligible", if( /data/a ="0" or /data/b ="0", "Not-Eligible", "nothing"))': string[];
    'if( /data/c ="1" and /data/b ="1", "Eligible", if( /data/a ="0" or /data/b ="0", "Not-Eligible", "nothing"))': string[];
    'if( /data/a ="1" and /data/b ="1", "Eligible", if( /data/a ="0" or /data/d ="0", "Not-Eligible", "nothing"))': string[];
    'if( /data/a ="1" and /data/b ="1", "Eligible", if( /data/d ="0" or /data/b ="0", "Not-Eligible", "nothing"))': string[];
    'count( if(true(), //b, //a ))': string[];
    'count ( if(true(), //b, //a ))': string[];
    'some-fn ( if(true(), //b, //a ))': string[];
    'int(/simple/xpath/to/node)': string[];
    'join(" :: ", //item)': string[];
    'join(", ", //item)': string[];
    'join(", ", /root/*)': string[];
    'join(", ", *)': string[];
    'max(//nonexisting)': string[];
    'max(/simple)': string[];
    'max(/simple/xpath/to/node)': string[];
    'max(/root/item)': string[];
    'max(self::*)': string[];
    'max(*)': string[];
    'min(//nonexisting)': string[];
    'min(/simple)': string[];
    'min(/simple/xpath/to/node)': string[];
    'min(/root/item)': string[];
    'min(self::*)': string[];
    'min(*)': string[];
    'not(/cities)': string[];
    'not(not(/cities))': string[];
    'not(/countries)': string[];
    'not(not(/countries))': string[];
    'once(. * 10)': string[];
    'position(..)': string[];
    'position(.)': string[];
    'position(../..)': string[];
    'pow(/simple/xpath/to/node, 0)': string[];
    'pow(/simple/xpath/to/node, 3)': string[];
    'pow(/simple/xpath/to/node, 2)': string[];
    '@id="FunctionRandomize"': string[];
    '@id="testFunctionNodeset2"': string[];
    '@id="crop_list"': string[];
    'regex(/simple/xpath/to/node, "[0-9]{3}")': string[];
    'selected(/simple/xpath/to/node, "one")': string[];
    'selected(/simple/xpath/to/node, "two")': string[];
    'selected(/simple/xpath/to/node, "three")': string[];
    'selected(/simple/xpath/to/node, "on")': string[];
    'selected(/simple/xpath/to/node, "ne")': string[];
    'selected(/simple/xpath/to/node, "four")': string[];
    '/simple/xpath/to/node': string[];
    'substr(/simple/xpath/to/node, 5)': string[];
    'substr(/simple/xpath/to/node, 2, 4)': string[];
    'sum(/root/item)': string[];
    'sin(/numbers/minusone)': string[];
    'sin(/numbers/minuspointfive)': string[];
    'sin(/numbers/zero)': string[];
    'sin(/numbers/pointfive)': string[];
    'sin(/numbers/one)': string[];
    'sin(/numbers/nan)': string[];
    'sin(/numbers/missing)': string[];
    'cos(/numbers/minusone)': string[];
    'cos(/numbers/minuspointfive)': string[];
    'cos(/numbers/zero)': string[];
    'cos(/numbers/pointfive)': string[];
    'cos(/numbers/one)': string[];
    'cos(/numbers/nan)': string[];
    'cos(/numbers/missing)': string[];
    'tan(/numbers/minuspointfive)': string[];
    'tan(/numbers/zero)': string[];
    'tan(/numbers/pointfive)': string[];
    'tan(/numbers/nan)': string[];
    'tan(/numbers/missing)': string[];
    'asin(/numbers/minusone)': string[];
    'asin(/numbers/minuspointfive)': string[];
    'asin(/numbers/zero)': string[];
    'asin(/numbers/pointfive)': string[];
    'asin(/numbers/one)': string[];
    'asin(/numbers/nan)': string[];
    'asin(/numbers/missing)': string[];
    'acos(/numbers/minusone)': string[];
    'acos(/numbers/minuspointfive)': string[];
    'acos(/numbers/zero)': string[];
    'acos(/numbers/pointfive)': string[];
    'acos(/numbers/one)': string[];
    'acos(/numbers/nan)': string[];
    'acos(/numbers/missing)': string[];
    'atan(/numbers/minusone)': string[];
    'atan(/numbers/minuspointfive)': string[];
    'atan(/numbers/zero)': string[];
    'atan(/numbers/pointfive)': string[];
    'atan(/numbers/one)': string[];
    'atan(/numbers/nan)': string[];
    'atan(/numbers/missing)': string[];
    'log(/numbers/minusone)': string[];
    'log(/numbers/minuspointfive)': string[];
    'log(/numbers/zero)': string[];
    'log(/numbers/pointfive)': string[];
    'log(/numbers/one)': string[];
    'log(/numbers/nan)': string[];
    'log(/numbers/missing)': string[];
    'log10(/numbers/minusone)': string[];
    'log10(/numbers/minuspointfive)': string[];
    'log10(/numbers/zero)': string[];
    'log10(/numbers/pointfive)': string[];
    'log10(/numbers/one)': string[];
    'log10(/numbers/nan)': string[];
    'log10(/numbers/missing)': string[];
    'exp(/numbers/minusone)': string[];
    'exp(/numbers/minuspointfive)': string[];
    'exp(/numbers/zero)': string[];
    'exp(/numbers/pointfive)': string[];
    'exp(/numbers/one)': string[];
    'exp(/numbers/nan)': string[];
    'exp(/numbers/missing)': string[];
    'exp10(/numbers/minusone)': string[];
    'exp10(/numbers/minuspointfive)': string[];
    'exp10(/numbers/zero)': string[];
    'exp10(/numbers/pointfive)': string[];
    'exp10(/numbers/one)': string[];
    'exp10(/numbers/nan)': string[];
    'exp10(/numbers/missing)': string[];
    'sqrt(/numbers/minusone)': string[];
    'sqrt(/numbers/minuspointfive)': string[];
    'sqrt(/numbers/zero)': string[];
    'sqrt(/numbers/pointfive)': string[];
    'sqrt(/numbers/one)': string[];
    'sqrt(/numbers/nan)': string[];
    'sqrt(/numbers/missing)': string[];
    'uuid(/numbers/one)': string[];
    'uuid(/numbers/two)': string[];
    'uuid(/numbers/six)': string[];
    'uuid(/numbers/ninetynine)': string[];
    'weighted-checklist(5, 5, self::* ,5)': string[];
    'weighted-checklist(9, 9, /thedata/somenodes/*, /thedata/someweights/*)': string[];
    'weighted-checklist(8, 8, /thedata/somenodes/*, /thedata/someweights/*)': string[];
    'weighted-checklist(10, 10, /thedata/somenodes/*, /thedata/someweights/*)': string[];
    '@id="cities"': string[];
    '/data/a[selected("a b", "a")]': string[];
    '../name/first = string-length(../name/last)': string[];
    '@id="3"': string[];
    '/data/c[@id="3"] and /data/a[@id="1"]': string[];
    '@id="1"': string[];
    '@id="2"': string[];
    '@id="4"': string[];
    '/data/item/a/number': string[];
    '/data/item/a/number/@OpenClinica:this': string[];
    '@OpenClinica:this="three"': string[];
    '../number[@OpenClinica:this="three"]': string[];
    '@enk:that=\'something\'': string[];
    '@id=\'d\'': string[];
    '../number[@OpenClinica:this=\'three\']': string[];
    '@OpenClinica:this=\'three\'': string[];
    '@enk:that="something"': string[];
    '/data/item/number/@this': string[];
    '@this="four"': string[];
    './@this="four"': string[];
    'string-length(./@this) = 1': string[];
    'string-length(./@this) < pi()': string[];
    'string-length(./number)=1': string[];
    'string-length(./number) = 1': string[];
    '(./number div 3.14) > 1.9': string[];
    'tan(./number) > 1': string[];
    'tan(./number) <= 1': string[];
    '(./number div pi()) >  1.9': string[];
    '(./number div pi()) <= 1.9': string[];
    "if ( /data/consented/deceased_CRVS/info_on_deceased/ageInYears != 'NaN' and string-length( /data/consented/deceased_CRVS/info_on_deceased/ageInYears ) < 0, int( /data/consented/deceased_CRVS/info_on_deceased/ageInYears  * 12 +  /data/consented/deceased_CRVS/info_on_deceased/ageInMonths ), if ( /data/consented/deceased_CRVS/info_on_deceased/age_child_unit  = 'months', /data/consented/deceased_CRVS/info_on_deceased/age_child_months , int( /data/consented/deceased_CRVS/info_on_deceased/age_child_years  * 12)))": string[];
    "if ( /data/consented/deceased_CRVS/info_on_deceased/age_child_unit  = 'months', /data/consented/deceased_CRVS/info_on_deceased/age_child_months , int( /data/consented/deceased_CRVS/info_on_deceased/age_child_years  * 12))": string[];
    "int( /data/consented/deceased_CRVS/info_on_deceased/age_child_years  * 12)": string[];
};
export default _default;
